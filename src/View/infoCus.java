/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Base;
import Controller.OpenPassbookDAO;
import Model.Customer;
import Model.Passbook;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ngocn
 */
public class infoCus extends javax.swing.JFrame {

    /**
     * Creates new form infoCus
     */
    public DefaultTableModel model;
    private static Customer customer;
    private static Passbook passbook;
    private List<Passbook> list = new ArrayList<>();

    public infoCus(Customer cus) {

        initComponents();
        this.customer = cus;
        loadTableCus(customer);
        loadTablePassbook(customer.getCMT());

    }

    public void loadTableCus(Customer cus) {
        this.model = (DefaultTableModel) infoCustomer.getModel();

//        format giới tính
        String gioiTinh = Base.Instance.gioiTinhToString(cus.getGender());

//        chuyển ngày sinh về dạng String theo định dạng dd/mm/yyyy
        String dateOfBirth = Base.Instance.dateToStringShow(cus.getBirthday());

//        add vào bảng kết quả tìm kiếm
        model.addRow(new Object[]{
            cus.getCMT(),
            cus.getFullname(),
            gioiTinh,
            dateOfBirth,
            cus.getAddress(),
            cus.getEmail(),
            cus.getPhone()
        });
    }

    public String KyHan(Passbook passbook) {
        String kyHan = "";
        if (passbook.getTypePeriod() == 1) {
            kyHan = "Không kỳ hạn - 0.2%";
        } else if (passbook.getTypePeriod() == 2) {
            kyHan = "1 Tháng - 4.1%";
        } else if (passbook.getTypePeriod() == 3) {
            kyHan = "2 Tháng - 4.1%";
        } else if (passbook.getTypePeriod() == 4) {
            kyHan = "3 Tháng - 4.6%";
        } else if (passbook.getTypePeriod() == 5) {
            kyHan = "6 Tháng - 5.1%";
        } else if (passbook.getTypePeriod() == 6) {
            kyHan = "9 Tháng - 5.5%";
        } else if (passbook.getTypePeriod() == 7) {
            kyHan = "12 Tháng - 6.6%";
        } else if (passbook.getTypePeriod() == 8) {
            kyHan = "18 Tháng - 6.7%";
        } else if (passbook.getTypePeriod() == 9) {
            kyHan = "24 Tháng - 6.7%";
        }
        return kyHan;
    }

    public void loadTablePassbook(String ID) {
        this.model = (DefaultTableModel) ListPassbook.getModel();

//        add vào bảng kết quả tìm kiếm
        this.list = OpenPassbookDAO.Instance.getAllByID(ID);
        quatity.setText(String.valueOf(list.size()));

        for (int i = 0; i < list.size(); i++) {
            passbook = list.get(i);
            model.addRow(new Object[]{
                i+1,
                passbook.getID(),
                passbook.getDepositsOriginal(),
                KyHan(passbook),
                (Base.Instance.dateToStringShow(passbook.getOpenDate())),
                Base.Instance.dateToStringShow(passbook.getExpDate())
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoCustomer = new javax.swing.JTable();
        openPassbook = new javax.swing.JButton();
        interest = new javax.swing.JButton();
        withDraw = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListPassbook = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        quatity = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Thông tin khách hàng");

        infoCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CMT / CCCD", "Họ tên", "Giới tính", "Ngày sinh", "Địa chỉ", "Email", "Số điện thoại"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(infoCustomer);
        if (infoCustomer.getColumnModel().getColumnCount() > 0) {
            infoCustomer.getColumnModel().getColumn(0).setMinWidth(70);
            infoCustomer.getColumnModel().getColumn(0).setMaxWidth(150);
            infoCustomer.getColumnModel().getColumn(1).setMinWidth(100);
            infoCustomer.getColumnModel().getColumn(1).setMaxWidth(150);
            infoCustomer.getColumnModel().getColumn(2).setMinWidth(50);
            infoCustomer.getColumnModel().getColumn(2).setMaxWidth(70);
            infoCustomer.getColumnModel().getColumn(3).setMinWidth(100);
            infoCustomer.getColumnModel().getColumn(3).setMaxWidth(150);
            infoCustomer.getColumnModel().getColumn(4).setMinWidth(200);
            infoCustomer.getColumnModel().getColumn(4).setMaxWidth(250);
            infoCustomer.getColumnModel().getColumn(5).setMinWidth(100);
            infoCustomer.getColumnModel().getColumn(5).setMaxWidth(200);
            infoCustomer.getColumnModel().getColumn(6).setMinWidth(100);
            infoCustomer.getColumnModel().getColumn(6).setMaxWidth(150);
        }

        openPassbook.setText("Mở sổ");
        openPassbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openPassbookActionPerformed(evt);
            }
        });

        interest.setText("Tính lãi");

        withDraw.setText("Rút sổ");

        ListPassbook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sổ", "Số tiền gửi", "Kỳ hạn", "Ngày gửi", "Ngày hết hạn"
            }
        ));
        ListPassbook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListPassbookMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListPassbook);

        jLabel2.setText("Khách hàng hiện có: ");

        jLabel4.setText("sổ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(304, 304, 304))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(openPassbook, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(interest, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(withDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quatity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openPassbook)
                    .addComponent(interest)
                    .addComponent(withDraw))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(quatity)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openPassbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openPassbookActionPerformed
        OpenPassbook op = new OpenPassbook(customer);
        op.setVisible(true);
        op.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_openPassbookActionPerformed

    private void ListPassbookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListPassbookMouseClicked
        int index = ListPassbook.getSelectedRow();
        infoPassbook ip = new infoPassbook(list.get(index));
        ip.setVisible(true);
        ip.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_ListPassbookMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ListPassbook;
    private javax.swing.JTable infoCustomer;
    private javax.swing.JButton interest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton openPassbook;
    private javax.swing.JLabel quatity;
    private javax.swing.JButton withDraw;
    // End of variables declaration//GEN-END:variables
}
